#include <iostream>
#include <fstream>
#include "nlohmann/json.hpp"

#include "utilities/StringsGetter.hpp"
#include "TAHeaders/TATileConstructor.hpp"
#include "utilities/Utils.hpp"
#include "utilities/CliHandler.hpp"

using json = nlohmann::json;


int main(int argc, char *argv[])
{
    CliHandler cliHandler(&argc, &argv);
    StringsGetter stringsGetter(cliHandler);

    std::vector<json> tiles;

    std::string nameTile = std::string();

    for (const auto &entry: getEntriesInAlphabeticalOrder(stringsGetter.getInputTilesDirPath()))
    {
        std::ifstream file(entry.path());

        if (static_cast<std::string>(entry.path()).find(".xml") == std::string::npos)
            continue;

        if (file.is_open())
        {
            // We obtain the json representation of a TA from the xml generated by UPPAAL.
            json j = getJsonFromFileStream(file);

            // nameTile = getStringGivenPosAndToken(getWordAfterLastSymbol(entry.path(), '/'), '.', 0);

            // std::cout << "\n---- " << nameTile << " ----\n";
            // std::cout << std::setw(4) << j << std::endl;
            // std::cout << "\n\n----------------------------\n\n";

            tiles.push_back(j);
        }
    }

    TATileConstructor taTileConstructor(tiles);
    taTileConstructor.concatenateTiles();

    return 0;
}
